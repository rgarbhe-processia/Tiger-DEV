Name	Registry Name	Description	Value	Hidden (boolean)	Icon File
CATMpgRepInstanceType			(type == 'CATMpgRepInstance')	FALSE
CheckedOutByUserData			attribute[PLMDMTDocument.V_CheckedOutUser] == context.user	FALSE
CheckedOutData			attribute[PLMDMTDocument.V_IsCheckedOut] == true	FALSE
CheckedOutDefinitionData			attribute[PLMDMTDocument.V_CheckedOutUser] != ''	FALSE
CreateAccess			'$ACCESS' == 'create'	FALSE
CreateConnectionAccess			('$ACCESS' == 'create') || ((!(to[VPLMrel/PLMConnection/V_Owner])) && ('$ACCESS' == 'read' || '$ACCESS' == 'show' || '$ACCESS' == 'modify' || '$ACCESS' == 'checkin' || '$ACCESS' == 'fromconnect' || '$ACCESS' == 'toconnect'))	FALSE
CreatePortAccess			('$ACCESS' == 'create') || ((!(to[VPLMrel/PLMPort/V_Owner])) && ('$ACCESS' == 'read' || '$ACCESS' == 'show' || '$ACCESS' == 'modify' || '$ACCESS' == 'checkin' || '$ACCESS' == 'fromconnect' || '$ACCESS' == 'toconnect'))	FALSE
CurrentProjectData			project.ancestor == context.user.assignment.project	FALSE
DeleteAccess			'$ACCESS' == 'delete'	FALSE
EnableDECFloatOnRelease	EnableDECFloatOnRelease	Enable DEC Float on Release	true	FALSE
ExtendExpOnReleased			true	FALSE
ExtendExpOnReleasedCx			(to[VPLMrel/PLMConnection/V_Owner].from.policy matchlist 'VPLM_SMB_Evaluation,VPLM_SMB_Definition,VPLM_SMB_Resource' ',') && (to[VPLMrel/PLMConnection/V_Owner].from.current matchlist 'FROZEN,RELEASED' ',') && (expression[CreateAccess] || expression[ModifyAccess] || (expression[DeleteAccess] && (to[VPLMrel/PLMConnection/V_Owner].from.reservedby == context.user || to[VPLMrel/PLMConnection/V_Owner].from.reservedby == '') && (to[VPLMrel/PLMConnection/V_Owner].from.current != 'RELEASED') && ((to[VPLMrel/PLMConnection/V_Owner].from.policy != 'VPLM_SMB_Evaluation') || (context.role.parent == 'VPLMProjectLeader' || context.role.parent == 'VPLMProjectAdministrator') || ((expression[VPLMStrictOwnership_Evaluation] && (to[VPLMrel/PLMConnection/V_Owner].from.owner == context.user)) || (!expression[VPLMStrictOwnership_Evaluation])))))	FALSE
ExtendExpOnReleasedPort			(to[VPLMrel/PLMPort/V_Owner].from.policy matchlist 'VPLM_SMB_Evaluation,VPLM_SMB_Definition,VPLM_SMB_Resource' ',') && (to[VPLMrel/PLMPort/V_Owner].from.current matchlist 'FROZEN,RELEASED' ',') && (expression[CreateAccess] || expression[ModifyAccess] || (expression[DeleteAccess] && (to[VPLMrel/PLMPort/V_Owner].from.reservedby == context.user || to[VPLMrel/PLMPort/V_Owner].from.reservedby == '') && (to[VPLMrel/ PLMPort/V_Owner].from.current != 'RELEASED') && ((to[VPLMrel/PLMPort/V_Owner].from.policy != 'VPLM_SMB_Evaluation') || (context.role.parent == 'VPLMProjectLeader' || context.role.parent == 'VPLMProjectAdministrator') || ((expression[VPLMStrictOwnership_Evaluation] && (to[VPLMrel/PLMPort/V_Owner].from.owner == context.user)) || (!expression[VPLMStrictOwnership_Evaluation])))))	FALSE
ExtendExpOnReleasedRel			(from.policy matchlist 'VPLM_SMB_Evaluation,VPLM_SMB_Definition,VPLM_SMB_Resource' ',') && (to.policy matchlist 'VPLM_SMB_Evaluation,VPLM_SMB_CX_Evaluation,VPLM_SMB_PORT_Evaluation' ',') && (from.current matchlist 'IN_WORK,FROZEN,RELEASED' ',') && (expression[ModifyAccess] || ((expression[CreateAccess] || (expression[DeleteAccess] && (to.current != 'RELEASED'))) && (from.reservedby == context.user || from.reservedby == '') && ((from.policy != 'VPLM_SMB_Evaluation') || (context.role.parent == 'VPLMProjectLeader' || context.role.parent == 'VPLMProjectAdministrator') || ((expression[VPLMStrictOwnership_Evaluation] && (from.owner == context.user)) || (!expression[VPLMStrictOwnership_Evaluation])))))	FALSE
ExtendExpOnReleasedRes_Cx			(expression[ExtendExpOnReleased] && (expression[MyOrganizationData] && expression[MyProjectData] && (to[VPLMrel/PLMConnection/V_Owner].from.policy == 'VPLM_SMB_Resource') && (to[VPLMrel/PLMConnection/V_Owner].from.current matchlist 'FROZEN,RELEASED' ',') && (expression[ReadAccess] || expression[CreateAccess] || expression[ModifyAccess] || (expression[DeleteAccess] && (to[VPLMrel/PLMConnection/V_Owner].from.current != 'RELEASED'))))) || ((!expression[ExtendExpOnReleased]) && (expression[MyOrganizationData] && expression[MyProjectData] && (to[VPLMrel/PLMConnection/V_Owner].from.policy == 'VPLM_SMB_Resource') && (to[VPLMrel/PLMConnection/V_Owner].from.current == 'FROZEN') && (expression[ReadAccess] || expression[CreateAccess] || expression[ModifyAccess] || expression[DeleteAccess])))	FALSE
ExtendExpOnReleasedRes_Rel			(expression[ExtendExpOnReleased] && ((from.policy == 'VPLM_SMB_Resource') && (to.policy matchlist 'VPLM_SMB_Evaluation,VPLM_SMB_CX_Evaluation,VPLM_SMB_PORT_Evaluation' ',') && ((from.current matchlist 'IN_WORK,FROZEN,RELEASED' ',') || ((from.current == 'PRIVATE') && (from.owner == context.user))) && (((expression[CreateAccess] || (expression[DeleteAccess] && (to.current != 'RELEASED'))) && (from.reservedby == context.user || from.reservedby == '')) || expression[ModifyAccess]))) || ((!expression[ExtendExpOnReleased]) && ((from.policy == 'VPLM_SMB_Resource') && (to.policy matchlist 'VPLM_SMB_Evaluation,VPLM_SMB_CX_Evaluation,VPLM_SMB_PORT_Evaluation' ',') && ((from.current matchlist 'IN_WORK,FROZEN' ',') || ((from.current == 'PRIVATE') && (from.owner == context.user))) && (((expression[CreateAccess] || expression[DeleteAccess]) && (from.reservedby == context.user || from.reservedby == '')) || expression[ModifyAccess])))	FALSE
ExtendExpOnReleased_Cx			(expression[ExtendExpOnReleased] && expression[ExtendExpOnReleasedCx]) || ((!expression[ExtendExpOnReleased]) && expression[LimitExpOnReleasedCx])	FALSE
ExtendExpOnReleased_Port			(expression[ExtendExpOnReleased] && expression[ExtendExpOnReleasedPort]) || ((!expression[ExtendExpOnReleased]) && expression[LimitExpOnReleasedPort])	FALSE
ExtendExpOnReleased_Rel			(expression[ExtendExpOnReleased] && expression[ExtendExpOnReleasedRel]) || ((!expression[ExtendExpOnReleased]) && expression[LimitExpOnReleasedRel])	FALSE
ExtendViewerOnInWork	ExtendViewerOnInWork		true	FALSE
ExternalPublicReadAble_Cx			((project.property[vplm_readAbility].value == 'Public') && ((!(to[VPLMrel/PLMConnection/V_Owner].from.current matchlist 'REMOVED,PRIVATE,DEFAULT' ',')) || ((to[VPLMrel/PLMConnection/V_Owner].from.owner == context.user) && (project == context.role.parent)))) || ((project.property[vplm_readAbility].value == 'Protected') && (to[VPLMrel/PLMConnection/V_Owner].from.current matchlist 'RELEASED,OBSOLETE' ','))	FALSE
ExternalPublicReadAble_Port			((project.property[vplm_readAbility].value == 'Public') && ((!(to[VPLMrel/PLMPort/V_Owner].from.current matchlist 'REMOVED,PRIVATE,DEFAULT' ',')) || ((to[VPLMrel/PLMPort/V_Owner].from.owner == context.user) && (project == context.role.parent)))) || ((project.property[vplm_readAbility].value == 'Protected') && (to[VPLMrel/PLMPort/V_Owner].from.current matchlist 'RELEASED,OBSOLETE' ','))	FALSE
ExternalPublicReadAble_Ref			((project.property[vplm_readAbility].value == 'Public') && ((current != 'REMOVED') || ((owner == context.user) && (project == context.role.parent)))) || ((project.property[vplm_readAbility].value == 'Protected') && (current matchlist 'RELEASED,OBSOLETE' ','))	FALSE
ExternalPublicReadAble_Rel			((project.property[vplm_readAbility].value == 'Public') && ((!(from.current matchlist 'REMOVED,PRIVATE,DEFAULT' ',')) || ((from.owner == context.user) && (project == context.role.parent)))) || ((project.property[vplm_readAbility].value == 'Protected') && (from.current matchlist 'RELEASED,OBSOLETE' ','))	FALSE
LimitExpOnReleasedCx			(to[VPLMrel/PLMConnection/V_Owner].from.policy matchlist 'VPLM_SMB_Evaluation,VPLM_SMB_Definition,VPLM_SMB_Resource' ',') && (to[VPLMrel/PLMConnection/V_Owner].from.current == 'FROZEN') && (expression[CreateAccess] || expression[ModifyAccess] || (expression[DeleteAccess] && (to[VPLMrel/PLMConnection/V_Owner].from.reservedby == context.user || to[VPLMrel/PLMConnection/V_Owner].from.reservedby == '') && ((to[VPLMrel/PLMConnection/V_Owner].from.policy != 'VPLM_SMB_Evaluation') || (context.role.parent == 'VPLMProjectLeader' || context.role.parent == 'VPLMProjectAdministrator') || ((expression[VPLMStrictOwnership_Evaluation] && (to[VPLMrel/PLMConnection/V_Owner].from.owner == context.user)) || (!expression[VPLMStrictOwnership_Evaluation])))))	FALSE
LimitExpOnReleasedPort			(to[VPLMrel/PLMPort/V_Owner].from.policy matchlist 'VPLM_SMB_Evaluation,VPLM_SMB_Definition,VPLM_SMB_Resource' ',') && (to[VPLMrel/PLMPort/V_Owner].from.current == 'FROZEN') && (expression[CreateAccess] || expression[ModifyAccess] || (expression[DeleteAccess] && (to[VPLMrel/PLMPort/V_Owner].from.reservedby == context.user || to[VPLMrel/PLMPort/V_Owner].from.reservedby == '') && ((to[VPLMrel/PLMPort/V_Owner].from.policy != 'VPLM_SMB_Evaluation') || (context.role.parent == 'VPLMProjectLeader' || context.role.parent == 'VPLMProjectAdministrator') || ((expression[VPLMStrictOwnership_Evaluation] && (to[VPLMrel/PLMPort/V_Owner].from.owner == context.user)) || (!expression[VPLMStrictOwnership_Evaluation])))))	FALSE
LimitExpOnReleasedRel			(from.policy matchlist 'VPLM_SMB_Evaluation,VPLM_SMB_Definition,VPLM_SMB_Resource' ',') && (to.policy matchlist 'VPLM_SMB_Evaluation,VPLM_SMB_CX_Evaluation,VPLM_SMB_PORT_Evaluation' ',') && (from.current matchlist 'IN_WORK,FROZEN' ',') && (((expression[CreateAccess] || expression[DeleteAccess]) && (from.reservedby == context.user || from.reservedby == '') && ((from.policy != 'VPLM_SMB_Evaluation') || (context.role.parent == 'VPLMProjectLeader' || context.role.parent == 'VPLMProjectAdministrator') || ((expression[VPLMStrictOwnership_Evaluation] && (from.owner == context.user)) || (!expression[VPLMStrictOwnership_Evaluation])))) || expression[ModifyAccess])	FALSE
ModifyAccess			((('$ACCESS' == 'modify') && (reservedby == context.user || reservedby == '')) || '$ACCESS' == 'changename' || '$ACCESS' == 'changetype' || '$ACCESS' == 'checkin' || '$ACCESS' == 'fromconnect' || '$ACCESS' == 'fromdisconnect') || (('$ACCESS' == 'lock' || '$ACCESS' == 'unlock') && (reservedby == context.user || reservedby == ''))	FALSE
MultiContextualAuthoringAbility	MultiContextualAuthoringAbility		true	FALSE
MultiContextualPrivateApplicability	MultiContextualPrivateApplicability		true	FALSE
MultiContextualPrivateReadAccess	MultiContextualPrivateReadAccess		true	FALSE
MyAscendantAndDescendantOrgData			organization.ancestor match context.user.assignment[$CHECKEDUSER].org.ancestor	FALSE
MyData			owner == context.user	FALSE
MyDescendantOrgData			organization.ancestor match context.user.assignment[$CHECKEDUSER].org	FALSE
MyOrganizationData			organization == context.role.parent	FALSE
MyPrjData			project == context.user.assignment[$CHECKEDUSER].project	FALSE
MyProjectData			project == context.role.parent	FALSE
OneClickParamNamingSeparator			-	FALSE
OrganizationPublicAccess	OrganizationPublicAccess		true	FALSE
PrivateReadAble			(project.property[vplm_readAbility].value == 'Private') && (context.role.parent.property[SOLUTION].value == 'Team')	FALSE
ProjectConfidentialData		Filters data with security level lower or equal than project accreditation	attribute[PLMEntity.V_sec_level].value <= context.user.assignment[$CHECKEDUSER].project.property[ACCREDITATION].value	FALSE
PromoteAccess			('$ACCESS' == 'promote' || '$ACCESS' == 'demote')	FALSE
ProtectedData			(project.ancestor == 'DesignTeam') || (project.ancestor == 'StandardTeam')	FALSE
ProtectedReadAble			(project.property[vplm_readAbility].value == 'Protected') && (context.role.parent.property[SOLUTION].value == 'Team')	FALSE
PublicReadAble			(project.property[vplm_readAbility].value == 'Public') && (context.role.parent.property[SOLUTION].value == 'Team')	FALSE
ReadAccess			('$ACCESS' == 'read' || '$ACCESS' == 'show' || '$ACCESS' == 'checkout' || '$ACCESS' == 'toconnect' || '$ACCESS' == 'todisconnect')	FALSE
RequirementInstanceType			((type.derived == 'RFLPLMReqChapterInstance') || (type.derived == 'RFLPLMReqCommentInstance') || (type.derived == 'RFLPLMReqSpecificationInstance') || (type.derived == 'RFLPLMRequirementInstance'))	FALSE
ReviewData			attribute[PLMEntity.V_discipline].value == 'Review'	FALSE
TeamReadAble_Cx			((expression[ExternalPublicReadAble_Cx] && (expression[MyProjectData] || (expression[MyOrganizationData] && (expression[OrganizationPublicAccess])))) || (expression[MyProjectData] && ((expression[ProtectedReadAble] && (to[VPLMrel/PLMConnection/V_Owner].from.current matchlist 'IN_WORK,DEFAULT,REMOVED,FROZEN' ',')) || expression[PrivateReadAble]))) && ('$ACCESS' == 'read' || '$ACCESS' == 'show' || '$ACCESS' == 'checkout' || '$ACCESS' == 'toconnect' || '$ACCESS' == 'todisconnect')	FALSE
TeamReadAble_Port			((expression[ExternalPublicReadAble_Port] && (expression[MyProjectData] || (expression[MyOrganizationData] && (expression[OrganizationPublicAccess])))) || (expression[MyProjectData] && ((expression[ProtectedReadAble] && (to[VPLMrel/PLMPort/V_Owner].from.current matchlist 'IN_WORK,DEFAULT,REMOVED,FROZEN' ',')) || expression[PrivateReadAble]))) && ('$ACCESS' == 'read' || '$ACCESS' == 'show' || '$ACCESS' == 'checkout' || '$ACCESS' == 'toconnect' || '$ACCESS' == 'todisconnect')	FALSE
TeamReadAble_Ref			((expression[ExternalPublicReadAble_Ref] && (expression[MyProjectData] || (expression[MyOrganizationData] && (expression[OrganizationPublicAccess])))) || (expression[MyProjectData] && ((expression[ProtectedReadAble] && (current matchlist 'IN_WORK,DEFAULT,REMOVED,FROZEN' ',')) || expression[PrivateReadAble]))) && ('$ACCESS' == 'read' || '$ACCESS' == 'show' || '$ACCESS' == 'checkout' || '$ACCESS' == 'toconnect' || '$ACCESS' == 'todisconnect')	FALSE
TeamReadAble_Rel			((expression[ExternalPublicReadAble_Rel] && (expression[MyProjectData] || (expression[MyOrganizationData] && (expression[OrganizationPublicAccess])))) || (expression[MyProjectData] && ((expression[ProtectedReadAble] && (from.current matchlist 'IN_WORK,DEFAULT,REMOVED,FROZEN' ',')) || expression[PrivateReadAble]))) && ('$ACCESS' == 'read' || '$ACCESS' == 'show' || '$ACCESS' == 'checkout' || '$ACCESS' == 'toconnect' || '$ACCESS' == 'todisconnect')	FALSE
UnsecuredInstanceType			((type == 'LPPrivateRepInstance') || (type.derived == 'PLMPosResourceInst') || (type == 'PLMRETokenTransferItem'))	FALSE
UserConfidentialData		Filters data with security level lower or equal than user accreditation	attribute[PLMEntity.V_sec_level].value <= context.user.property[ACCREDITATION].value	FALSE
UserConfidentiality		Expression valuating the confidentiality of a user	context.role.project.property[ACCREDITATION].value	FALSE
VPLMAutoPromoteFirstMinorRev			true	FALSE
VPLMAutoPromoteNextMinorRev			true	FALSE
VPLMCreatorRole			context.role.ancestor == 'VPLMCreator'	FALSE
VPLMExperimenterRole			context.role.ancestor == 'VPLMExperimenter'	FALSE
VPLMProjectAdministratorRole			(context.role.parent == 'VPLMProjectAdministrator')	FALSE
VPLMProjectLeaderRole			(context.role.parent == 'VPLMProjectLeader')	FALSE
VPLMPublicReadCustom			organization == context.user.assignment[$CHECKEDUSER].org.ancestor	FALSE
VPLMRACENamingXParam				FALSE
VPLMStrictLocking_Definition	VPLMStrictLockingDefinition		false	FALSE
VPLMStrictLocking_Definition_Rel			false	FALSE
VPLMStrictOrgOwnership	VPLMStrictOrgOwnership		true	FALSE
VPLMStrictOwnership_Definition	VPLMStrictOwnershipDefinition		false	FALSE
VPLMStrictOwnership_Evaluation	VPLMStrictOwnershipEvaluation		false	FALSE
VPLMStrictOwnership_Resource	VPLMStrictOwnershipResource		false	FALSE
VPLMStrictVersioning	VPLMStrictVersioning		false	FALSE
VPLMTeamSiteAffix			InterfixNotSpecified	FALSE
VPLMTransferByOwner	VPLMTransferByOwner		true	FALSE
VPLMViewerRole			context.role.ancestor == 'VPLMViewer'	FALSE
isLockerForUnlock			('$ACCESS' == 'unlock' && (reservedby == context.user || reservedby == ''))	FALSE
